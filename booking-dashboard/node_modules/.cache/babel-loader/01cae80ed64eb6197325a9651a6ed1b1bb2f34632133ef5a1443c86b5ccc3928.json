{"ast":null,"code":"var _jsxFileName = \"/Users/chiragdodia/Documents/GitHub/SE2GROUP6-FRONTEND/booking-dashboard/src/pages/LoginSignup.js\",\n  _s = $RefreshSig$();\n// src/pages/LoginSignup.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { TextField, Button, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginSignup = () => {\n  _s();\n  const [isLogin, setIsLogin] = useState(true); // Toggle between Login and Signup\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n\n  // This function simulates an API call (for front-end only demo)\n  const handleSubmit = e => {\n    e.preventDefault();\n    setMessage(''); // Clear any previous message\n\n    // Simulate a network delay using setTimeout\n    setTimeout(() => {\n      if (isLogin) {\n        // Simulate a successful login\n        setMessage('Login successful!');\n        // Optionally, redirect to the dashboard:\n        navigate('/');\n      } else {\n        // Simulate a successful signup\n        setMessage('Sign up successful! Please log in.');\n        // Switch to login mode after a successful signup\n        setIsLogin(true);\n      }\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: isLogin ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: styles.form,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Email\",\n        variant: \"outlined\",\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true,\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Password\",\n        variant: \"outlined\",\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true,\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        style: styles.button,\n        children: isLogin ? 'Login' : 'Sign Up'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      color: \"error\",\n      style: styles.message,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        setIsLogin(!isLogin);\n        setMessage('');\n      },\n      style: styles.toggleButton,\n      children: isLogin ? \"Don't have an account? Sign Up\" : \"Already have an account? Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginSignup, \"ZlDnCuNxMPQc74pZUrDBjiDsutw=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginSignup;\nconst styles = {\n  container: {\n    maxWidth: '400px',\n    margin: '50px auto',\n    padding: '20px',\n    textAlign: 'center',\n    border: '1px solid #ccc',\n    borderRadius: '8px'\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '15px'\n  },\n  input: {\n    width: '100%'\n  },\n  button: {\n    marginTop: '10px'\n  },\n  toggleButton: {\n    marginTop: '15px'\n  },\n  message: {\n    marginTop: '10px'\n  }\n};\nexport default LoginSignup;\nvar _c;\n$RefreshReg$(_c, \"LoginSignup\");","map":{"version":3,"names":["React","useState","useNavigate","TextField","Button","Typography","jsxDEV","_jsxDEV","LoginSignup","_s","isLogin","setIsLogin","email","setEmail","password","setPassword","message","setMessage","navigate","handleSubmit","e","preventDefault","setTimeout","style","styles","container","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","form","label","type","value","onChange","target","required","input","color","button","onClick","toggleButton","_c","maxWidth","margin","padding","textAlign","border","borderRadius","display","flexDirection","gap","width","marginTop","$RefreshReg$"],"sources":["/Users/chiragdodia/Documents/GitHub/SE2GROUP6-FRONTEND/booking-dashboard/src/pages/LoginSignup.js"],"sourcesContent":["// src/pages/LoginSignup.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { TextField, Button, Typography } from '@mui/material';\n\nconst LoginSignup = () => {\n  const [isLogin, setIsLogin] = useState(true); // Toggle between Login and Signup\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n\n  // This function simulates an API call (for front-end only demo)\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setMessage(''); // Clear any previous message\n\n    // Simulate a network delay using setTimeout\n    setTimeout(() => {\n      if (isLogin) {\n        // Simulate a successful login\n        setMessage('Login successful!');\n        // Optionally, redirect to the dashboard:\n        navigate('/');\n      } else {\n        // Simulate a successful signup\n        setMessage('Sign up successful! Please log in.');\n        // Switch to login mode after a successful signup\n        setIsLogin(true);\n      }\n    }, 1000);\n  };\n\n  return (\n    <div style={styles.container}>\n      <Typography variant=\"h4\" gutterBottom>\n        {isLogin ? 'Login' : 'Sign Up'}\n      </Typography>\n      <form onSubmit={handleSubmit} style={styles.form}>\n        <TextField\n          label=\"Email\"\n          variant=\"outlined\"\n          type=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          required\n          style={styles.input}\n        />\n        <TextField\n          label=\"Password\"\n          variant=\"outlined\"\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n          style={styles.input}\n        />\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\" style={styles.button}>\n          {isLogin ? 'Login' : 'Sign Up'}\n        </Button>\n      </form>\n      {message && (\n        <Typography variant=\"body1\" color=\"error\" style={styles.message}>\n          {message}\n        </Typography>\n      )}\n      <Button\n        onClick={() => {\n          setIsLogin(!isLogin);\n          setMessage('');\n        }}\n        style={styles.toggleButton}\n      >\n        {isLogin ? \"Don't have an account? Sign Up\" : \"Already have an account? Login\"}\n      </Button>\n    </div>\n  );\n};\n\nconst styles = {\n  container: {\n    maxWidth: '400px',\n    margin: '50px auto',\n    padding: '20px',\n    textAlign: 'center',\n    border: '1px solid #ccc',\n    borderRadius: '8px',\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '15px',\n  },\n  input: {\n    width: '100%',\n  },\n  button: {\n    marginTop: '10px',\n  },\n  toggleButton: {\n    marginTop: '15px',\n  },\n  message: {\n    marginTop: '10px',\n  },\n};\n\nexport default LoginSignup;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}