{"ast":null,"code":"const handleSubmit = async e => {\n  e.preventDefault();\n  const payload = {\n    customerEmail: email,\n    items: selectedSeats.map(seat => ({\n      name: `${title} - Seat ${seat}`,\n      amount: rowPrices(seat.charAt(0)) * 100,\n      // Stripe expects amount in paisa (cents)\n      quantity: 1,\n      currency: 'inr'\n    }))\n  };\n  try {\n    const response = await fetch('http://localhost:3000/api/payment/checkout', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    });\n    const data = await response.json();\n    if (data.sessionId) {\n      const stripe = window.Stripe('pk_test_YourPublishableKeyHere'); // ✅ Replace this\n      const {\n        error\n      } = await stripe.redirectToCheckout({\n        sessionId: data.sessionId\n      });\n      if (error) {\n        console.error('Stripe redirect error:', error.message);\n        alert('Stripe error: ' + error.message);\n      }\n    } else {\n      alert('Failed to create payment session');\n    }\n  } catch (err) {\n    console.error('Payment error:', err);\n    alert('Error processing payment');\n  }\n};","map":{"version":3,"names":["handleSubmit","e","preventDefault","payload","customerEmail","email","items","selectedSeats","map","seat","name","title","amount","rowPrices","charAt","quantity","currency","response","fetch","method","headers","body","JSON","stringify","data","json","sessionId","stripe","window","Stripe","error","redirectToCheckout","console","message","alert","err"],"sources":["/Users/koushik/Desktop/events/src/pages/PaymentPage.js"],"sourcesContent":["const handleSubmit = async (e) => {\n  e.preventDefault();\n\n  const payload = {\n    customerEmail: email,\n    items: selectedSeats.map(seat => ({\n      name: `${title} - Seat ${seat}`,\n      amount: rowPrices(seat.charAt(0)) * 100, // Stripe expects amount in paisa (cents)\n      quantity: 1,\n      currency: 'inr',\n    })),\n  };\n\n  try {\n    const response = await fetch('http://localhost:3000/api/payment/checkout', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(payload),\n    });\n\n    const data = await response.json();\n\n    if (data.sessionId) {\n      const stripe = window.Stripe('pk_test_YourPublishableKeyHere'); // ✅ Replace this\n      const { error } = await stripe.redirectToCheckout({ sessionId: data.sessionId });\n      if (error) {\n        console.error('Stripe redirect error:', error.message);\n        alert('Stripe error: ' + error.message);\n      }\n    } else {\n      alert('Failed to create payment session');\n    }\n  } catch (err) {\n    console.error('Payment error:', err);\n    alert('Error processing payment');\n  }\n};\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,CAAC,IAAK;EAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;EAElB,MAAMC,OAAO,GAAG;IACdC,aAAa,EAAEC,KAAK;IACpBC,KAAK,EAAEC,aAAa,CAACC,GAAG,CAACC,IAAI,KAAK;MAChCC,IAAI,EAAE,GAAGC,KAAK,WAAWF,IAAI,EAAE;MAC/BG,MAAM,EAAEC,SAAS,CAACJ,IAAI,CAACK,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;MAAE;MACzCC,QAAQ,EAAE,CAAC;MACXC,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ,CAAC;EAED,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,EAAE;MACzEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACpB,OAAO;IAC9B,CAAC,CAAC;IAEF,MAAMqB,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAElC,IAAID,IAAI,CAACE,SAAS,EAAE;MAClB,MAAMC,MAAM,GAAGC,MAAM,CAACC,MAAM,CAAC,gCAAgC,CAAC,CAAC,CAAC;MAChE,MAAM;QAAEC;MAAM,CAAC,GAAG,MAAMH,MAAM,CAACI,kBAAkB,CAAC;QAAEL,SAAS,EAAEF,IAAI,CAACE;MAAU,CAAC,CAAC;MAChF,IAAII,KAAK,EAAE;QACTE,OAAO,CAACF,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAACG,OAAO,CAAC;QACtDC,KAAK,CAAC,gBAAgB,GAAGJ,KAAK,CAACG,OAAO,CAAC;MACzC;IACF,CAAC,MAAM;MACLC,KAAK,CAAC,kCAAkC,CAAC;IAC3C;EACF,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZH,OAAO,CAACF,KAAK,CAAC,gBAAgB,EAAEK,GAAG,CAAC;IACpCD,KAAK,CAAC,0BAA0B,CAAC;EACnC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}