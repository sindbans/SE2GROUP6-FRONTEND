{"ast":null,"code":"var _jsxFileName = \"/Users/koushik/Desktop/events/src/pages/PaymentPage.js\",\n  _s = $RefreshSig$();\n// src/pages/PaymentPage.js\nimport React, { useState, useEffect } from 'react';\nimport { Elements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport CheckoutForm from './CheckoutForm';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe('your-publishable-key');\nconst PaymentPage = () => {\n  _s();\n  const location = useLocation();\n  const {\n    title,\n    price,\n    quantity\n  } = location.state || {};\n  const [clientSecret, setClientSecret] = useState('');\n  useEffect(() => {\n    // Fetch client secret from your backend\n    fetch('/create-payment-intent', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        amount: price * quantity * 100,\n        // Convert to cents\n        currency: 'inr'\n      })\n    }).then(res => res.json()).then(data => setClientSecret(data.clientSecret));\n  }, [price, quantity]);\n  const options = {\n    clientSecret,\n    appearance: {\n      theme: 'night'\n    } // Optional dark theme\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment-container\",\n    children: clientSecret && /*#__PURE__*/_jsxDEV(Elements, {\n      stripe: stripePromise,\n      options: options,\n      children: /*#__PURE__*/_jsxDEV(CheckoutForm, {\n        title: title,\n        price: price,\n        quantity: quantity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentPage, \"KbdiYT6pv+B17IUO2xB1MDjqc5I=\", false, function () {\n  return [useLocation];\n});\n_c = PaymentPage;\nexport default PaymentPage;\nvar _c;\n$RefreshReg$(_c, \"PaymentPage\");","map":{"version":3,"names":["React","useState","useEffect","Elements","loadStripe","CheckoutForm","useLocation","jsxDEV","_jsxDEV","stripePromise","PaymentPage","_s","location","title","price","quantity","state","clientSecret","setClientSecret","fetch","method","headers","body","JSON","stringify","amount","currency","then","res","json","data","options","appearance","theme","className","children","stripe","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/koushik/Desktop/events/src/pages/PaymentPage.js"],"sourcesContent":["// src/pages/PaymentPage.js\nimport React, { useState, useEffect } from 'react';\nimport { Elements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport CheckoutForm from './CheckoutForm';\nimport { useLocation } from 'react-router-dom';\n\nconst stripePromise = loadStripe('your-publishable-key');\n\nconst PaymentPage = () => {\n  const location = useLocation();\n  const { title, price, quantity } = location.state || {};\n  const [clientSecret, setClientSecret] = useState('');\n\n  useEffect(() => {\n    // Fetch client secret from your backend\n    fetch('/create-payment-intent', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ \n        amount: (price * quantity) * 100, // Convert to cents\n        currency: 'inr' \n      }),\n    })\n      .then(res => res.json())\n      .then(data => setClientSecret(data.clientSecret));\n  }, [price, quantity]);\n\n  const options = {\n    clientSecret,\n    appearance: { theme: 'night' } // Optional dark theme\n  };\n\n  return (\n    <div className=\"payment-container\">\n      {clientSecret && (\n        <Elements stripe={stripePromise} options={options}>\n          <CheckoutForm \n            title={title}\n            price={price}\n            quantity={quantity}\n          />\n        </Elements>\n      )}\n    </div>\n  );\n};\n\nexport default PaymentPage;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,aAAa,GAAGL,UAAU,CAAC,sBAAsB,CAAC;AAExD,MAAMM,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEO,KAAK;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGH,QAAQ,CAACI,KAAK,IAAI,CAAC,CAAC;EACvD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd;IACAiB,KAAK,CAAC,wBAAwB,EAAE;MAC9BC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,MAAM,EAAGX,KAAK,GAAGC,QAAQ,GAAI,GAAG;QAAE;QAClCW,QAAQ,EAAE;MACZ,CAAC;IACH,CAAC,CAAC,CACCC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAIZ,eAAe,CAACY,IAAI,CAACb,YAAY,CAAC,CAAC;EACrD,CAAC,EAAE,CAACH,KAAK,EAAEC,QAAQ,CAAC,CAAC;EAErB,MAAMgB,OAAO,GAAG;IACdd,YAAY;IACZe,UAAU,EAAE;MAAEC,KAAK,EAAE;IAAQ,CAAC,CAAC;EACjC,CAAC;EAED,oBACEzB,OAAA;IAAK0B,SAAS,EAAC,mBAAmB;IAAAC,QAAA,EAC/BlB,YAAY,iBACXT,OAAA,CAACL,QAAQ;MAACiC,MAAM,EAAE3B,aAAc;MAACsB,OAAO,EAAEA,OAAQ;MAAAI,QAAA,eAChD3B,OAAA,CAACH,YAAY;QACXQ,KAAK,EAAEA,KAAM;QACbC,KAAK,EAAEA,KAAM;QACbC,QAAQ,EAAEA;MAAS;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM;EACX;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC7B,EAAA,CArCID,WAAW;EAAA,QACEJ,WAAW;AAAA;AAAAmC,EAAA,GADxB/B,WAAW;AAuCjB,eAAeA,WAAW;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}