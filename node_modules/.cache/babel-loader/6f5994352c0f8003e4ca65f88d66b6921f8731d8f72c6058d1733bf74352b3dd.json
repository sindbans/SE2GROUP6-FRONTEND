{"ast":null,"code":"var _jsxFileName = \"/Users/koushik/Desktop/events/src/pages/CheckoutForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Elements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport CheckoutForm from './CheckoutForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe('your-publishable-key');\nconst PaymentPage = () => {\n  _s();\n  const [clientSecret, setClientSecret] = useState('');\n  useEffect(() => {\n    // Fetch client secret from your backend when the component mounts\n    fetch('/create-payment-intent', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        amount: 1000,\n        // Amount in cents (e.g., ₹10.00 = 1000)\n        currency: 'inr'\n      })\n    }).then(res => res.json()).then(data => setClientSecret(data.clientSecret));\n  }, []);\n  const options = {\n    clientSecret,\n    appearance: {\n      theme: 'night'\n    } // Optional dark theme\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment-page\",\n    children: clientSecret && /*#__PURE__*/_jsxDEV(Elements, {\n      stripe: stripePromise,\n      options: options,\n      children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentPage, \"8vp6U1rokJn7s9Qkcb0FBE79VIQ=\");\n_c = PaymentPage;\nexport default PaymentPage;\nvar _c;\n$RefreshReg$(_c, \"PaymentPage\");","map":{"version":3,"names":["React","useState","useEffect","Elements","loadStripe","CheckoutForm","jsxDEV","_jsxDEV","stripePromise","PaymentPage","_s","clientSecret","setClientSecret","fetch","method","headers","body","JSON","stringify","amount","currency","then","res","json","data","options","appearance","theme","className","children","stripe","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/koushik/Desktop/events/src/pages/CheckoutForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Elements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport CheckoutForm from './CheckoutForm';\n\nconst stripePromise = loadStripe('your-publishable-key');\n\nconst PaymentPage = () => {\n  const [clientSecret, setClientSecret] = useState('');\n\n  useEffect(() => {\n    // Fetch client secret from your backend when the component mounts\n    fetch('/create-payment-intent', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ \n        amount: 1000, // Amount in cents (e.g., ₹10.00 = 1000)\n        currency: 'inr' \n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => setClientSecret(data.clientSecret));\n  }, []);\n\n  const options = {\n    clientSecret,\n    appearance: { theme: 'night' }, // Optional dark theme\n  };\n\n  return (\n    <div className=\"payment-page\">\n      {clientSecret && (\n        <Elements stripe={stripePromise} options={options}>\n          <CheckoutForm />\n        </Elements>\n      )}\n    </div>\n  );\n};\n\nexport default PaymentPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,aAAa,GAAGJ,UAAU,CAAC,sBAAsB,CAAC;AAExD,MAAMK,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd;IACAW,KAAK,CAAC,wBAAwB,EAAE;MAC9BC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,MAAM,EAAE,IAAI;QAAE;QACdC,QAAQ,EAAE;MACZ,CAAC;IACH,CAAC,CAAC,CACCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKZ,eAAe,CAACY,IAAI,CAACb,YAAY,CAAC,CAAC;EACvD,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMc,OAAO,GAAG;IACdd,YAAY;IACZe,UAAU,EAAE;MAAEC,KAAK,EAAE;IAAQ,CAAC,CAAE;EAClC,CAAC;EAED,oBACEpB,OAAA;IAAKqB,SAAS,EAAC,cAAc;IAAAC,QAAA,EAC1BlB,YAAY,iBACXJ,OAAA,CAACJ,QAAQ;MAAC2B,MAAM,EAAEtB,aAAc;MAACiB,OAAO,EAAEA,OAAQ;MAAAI,QAAA,eAChDtB,OAAA,CAACF,YAAY;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EACX;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxB,EAAA,CA/BID,WAAW;AAAA0B,EAAA,GAAX1B,WAAW;AAiCjB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}