{"ast":null,"code":"var _jsxFileName = \"/Users/koushik/Desktop/events/src/pages/EventsPage.js\",\n  _s = $RefreshSig$();\n// src/pages/EventsPage.js\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport EventCard from '../components/EventCard';\nimport './EventsPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventsPage = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('all');\n  useEffect(() => {\n    // Mock API call\n    const mockEvents = [{\n      id: 1,\n      title: \"Coldplay Concert\",\n      type: \"concert\",\n      date: \"2025-06-15\",\n      price: 5000,\n      venue: \"Mumbai Arena\",\n      poster: \"https://via.placeholder.com/300x400\"\n    }, {\n      id: 2,\n      title: \"Avengers: Endgame\",\n      type: \"movie\",\n      date: \"2025-05-01\",\n      price: 300,\n      venue: \"PVR Cinemas\",\n      poster: \"https://via.placeholder.com/300x400\"\n    }];\n    setEvents(mockEvents);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"events-page\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: selectedCategory === 'all' ? 'active' : '',\n        onClick: () => setSelectedCategory('all'),\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: selectedCategory === 'concert' ? 'active' : '',\n        onClick: () => setSelectedCategory('concert'),\n        children: \"Concerts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: selectedCategory === 'movie' ? 'active' : '',\n        onClick: () => setSelectedCategory('movie'),\n        children: \"Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"events-grid\",\n      children: events.filter(event => selectedCategory === 'all' || event.type === selectedCategory).map(event => /*#__PURE__*/_jsxDEV(EventCard, {\n        event: event\n      }, event.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(EventsPage, \"aL7GhHXbaUEcZBGWP72NENtrSas=\");\n_c = EventsPage;\nexport default EventsPage;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","Header","EventCard","jsxDEV","_jsxDEV","EventsPage","_s","events","setEvents","selectedCategory","setSelectedCategory","mockEvents","id","title","type","date","price","venue","poster","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","filter","event","map","_c","$RefreshReg$"],"sources":["/Users/koushik/Desktop/events/src/pages/EventsPage.js"],"sourcesContent":["// src/pages/EventsPage.js\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport EventCard from '../components/EventCard';\nimport './EventsPage.css';\n\nconst EventsPage = () => {\n  const [events, setEvents] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('all');\n\n  useEffect(() => {\n    // Mock API call\n    const mockEvents = [\n      {\n        id: 1,\n        title: \"Coldplay Concert\",\n        type: \"concert\",\n        date: \"2025-06-15\",\n        price: 5000,\n        venue: \"Mumbai Arena\",\n        poster: \"https://via.placeholder.com/300x400\"\n      },\n      {\n        id: 2,\n        title: \"Avengers: Endgame\",\n        type: \"movie\",\n        date: \"2025-05-01\",\n        price: 300,\n        venue: \"PVR Cinemas\",\n        poster: \"https://via.placeholder.com/300x400\"\n      }\n    ];\n    setEvents(mockEvents);\n  }, []);\n\n  return (\n    <div className=\"events-page\">\n      <Header />\n      \n      <div className=\"filters\">\n        <button className={selectedCategory === 'all' ? 'active' : ''}\n          onClick={() => setSelectedCategory('all')}>All</button>\n        <button className={selectedCategory === 'concert' ? 'active' : ''}\n          onClick={() => setSelectedCategory('concert')}>Concerts</button>\n        <button className={selectedCategory === 'movie' ? 'active' : ''}\n          onClick={() => setSelectedCategory('movie')}>Movies</button>\n      </div>\n\n      <div className=\"events-grid\">\n        {events\n          .filter(event => selectedCategory === 'all' || event.type === selectedCategory)\n          .map(event => (\n            <EventCard key={event.id} event={event} />\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default EventsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}